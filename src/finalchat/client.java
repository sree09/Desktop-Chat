/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalchat;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.math.BigInteger;
import java.net.Socket;
import java.security.SecureRandom;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Dasaradhi Jetti
 */
public class client extends javax.swing.JFrame {

    /**
     * Creates new form client
     */
    static Socket csoc;
    static DataInputStream inp;
    static DataOutputStream out;
    
    static int i = 0;
    static BigInteger g = BigInteger.probablePrime(56, new SecureRandom());
    static BigInteger p = BigInteger.probablePrime(56, new SecureRandom());
    static BigInteger a; 
    //BigInteger g = BigInteger.valueOf(23);
    //BigInteger p = BigInteger.valueOf(5);
    
    static BigInteger hisShare,finalKey,twinsShare;
    
    String passphrase = "Om";
    String keyEst = "";
    String gp = "";
    public static String KEY;
    byte[] textEncrypted;
    
    Timer timer = new Timer();
    
    public client() throws Exception{
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ipadd = new javax.swing.JTextField();
        port = new javax.swing.JTextField();
        user = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        msgarea = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatarea = new javax.swing.JTextArea();
        connect = new javax.swing.JButton();
        send_dh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        send = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ipadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipaddActionPerformed(evt);
            }
        });

        port.setText("2222");
        port.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portActionPerformed(evt);
            }
        });

        msgarea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                msgareaMouseClicked(evt);
            }
        });
        msgarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgareaActionPerformed(evt);
            }
        });

        chatarea.setColumns(20);
        chatarea.setRows(5);
        jScrollPane1.setViewportView(chatarea);

        connect.setText("Connect");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        send_dh.setText("Exchange");
        send_dh.setEnabled(false);
        send_dh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send_dhActionPerformed(evt);
            }
        });

        jLabel1.setText("IP Addr");

        send.setText("Send");
        send.setEnabled(false);
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        jLabel2.setText("Port No");

        jLabel3.setText("Username");

        jLabel4.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(user)
                            .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(connect)
                        .addGap(18, 18, 18)
                        .addComponent(send_dh)
                        .addGap(18, 18, 18)
                        .addComponent(send)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(port))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(ipadd, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(msgarea)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(ipadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(msgarea, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connect)
                    .addComponent(send_dh)
                    .addComponent(send))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
        try{
        String toload = "";
        String act = msgarea.getText();
        msgarea.setText("");
        msgarea.requestFocus();
        String ciph = "";
        String Key1 = twinsShare.modPow(a,p).toString();
            chatarea.setText(chatarea.getText().trim()+"\n"+"Me\t:"+act);
            // DES Encryption
            byte[] desKeyData = Key1.getBytes("ISO-8859-1");
            DESKeySpec desKeySpec = new DESKeySpec(desKeyData);
            SecretKeyFactory keyFactory = SecretKeyFactory.getInstance("DES");
            SecretKey myDesKey = keyFactory.generateSecret(desKeySpec);           
            Cipher desCipher;
            desCipher = Cipher.getInstance("DES/ECB/PKCS5Padding");
            desCipher.init(Cipher.ENCRYPT_MODE, myDesKey);
            byte[] text = act.getBytes("ISO-8859-1");
            textEncrypted = desCipher.doFinal(text);
            ciph = new String(textEncrypted, "ISO-8859-1");
            toload = user.getText()+"-"+ciph;
            out.writeUTF(toload);
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_sendActionPerformed

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        
        String ip = ipadd.getText();
        int portno = Integer.parseInt(port.getText());
        String pass = password.getText();
        password.setText("");
        if (pass.equals(passphrase))
        {
            try{   
                chatarea.setText("Connection Established");
                csoc = new Socket(ip,portno);
                inp = new DataInputStream(csoc.getInputStream());
                out = new DataOutputStream(csoc.getOutputStream());
                i = i + 1;
                System.out.print(i);          
            }
             catch(Exception e){
             
            }
            connect.setEnabled(false);
            send_dh.setEnabled(true);
        }   
        else{
            try{
                chatarea.setText("Password Wrong"+"\n"+"Enter correct password and click connect");
            }
            catch(Exception e){
                
            }
        }
         
        
    }//GEN-LAST:event_connectActionPerformed
   
    private void ipaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipaddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipaddActionPerformed

    private void msgareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgareaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msgareaActionPerformed

    private void send_dhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send_dhActionPerformed
        
    timer.scheduleAtFixedRate(new TimerTask() {
 
    @Override
    public void run() {
        try{  
            a = BigInteger.probablePrime(56, new SecureRandom());
            BigInteger myShare = g.modPow(a, p); 
            keyEst = "Key-"+user.getText()+"-'s Share = -"+myShare.toString();
            out.writeUTF(keyEst);
        }
        catch(Exception e){
                
        }
        send_dh.setEnabled(false);
        send.setEnabled(true);
    // Your database code here
    }
    }, 1, 20000);
             
    }//GEN-LAST:event_send_dhActionPerformed

    private void portActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portActionPerformed

    private void msgareaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_msgareaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_msgareaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new client().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        
        try {
            Thread.sleep(20000);
            } 
        catch(InterruptedException ex) {
            Thread.currentThread().interrupt();
            }
        System.out.print("sai");
        clientThread smallClient = new clientThread(csoc);
        smallClient.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea chatarea;
    private javax.swing.JButton connect;
    private static javax.swing.JTextField ipadd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField msgarea;
    public static javax.swing.JTextField password;
    public static javax.swing.JTextField port;
    private javax.swing.JButton send;
    public javax.swing.JButton send_dh;
    public static javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
